{"version":3,"file":"three-maze-generator.js","sources":["../src/three-maze-generator.js"],"sourcesContent":["\nexport class MAZEGEN {\n\n  static createMaze(spec = {}) {\n\n    let {\n      xSize = 10,\n      ySize = 5,\n      wallWidth = 4,\n      wallDepth = 1,\n      wallHeight = 1,\n      wallTexture,\n      capHeight = 0,\n    } = spec;\n\n    let wallNodes = [];\n    let endCaps = [];\n\n    var mazeFactory = window.MitchAllen.MazeGenerator;\n    var maze = mazeFactory.Square({ x: xSize, y: ySize });\n    console.log(maze);\n    maze.generate();\n    maze.printBoard();\n    let d = maze.getMaxDistance(0, 0);\n    let { x: dx, y: dy } = d;\n    let points = [\n      { x: 0, y: 0 },\n      { x: dx, y: dy },\n    ];\n    maze.solve(points);\n    maze.printBoard({ target: d });\n\n    const cellSize = wallWidth;\n\n    let yPos = 0;\n\n    let xOffset = (xSize + 1) * cellSize / 2.0;\n    let yOffset = (ySize + 1) * cellSize / 2.0;\n\n    // { tag: `maze-wall`, map: textureMap['mazeWall'], y: yOffset + 0 * yFactor, x: -2, scale: 0.5, width: 4.0, rotY: 90.0 },\n\n    for (let y = -1; y < ySize; y++) {\n      for (let x = -1; x < xSize; x++) {\n        let xPos = xOffset + (x - xSize) * cellSize;\n        let zPos = yOffset + (y - ySize) * cellSize;\n\n        // Draw end cap\n\n        endCaps.push({\n          x: xPos + cellSize / 2.0,\n          y: capHeight,\n          z: zPos + cellSize / 2.0,\n          color: \"#444444\",\n          radius: 0.5,  // TODO - get from spec\n          height: 1.1,  // TODO - get from spec\n        });\n\n        if( maze.isGreen(x,y)) {\n          // show solution\n          let color = (x === dx && y === dy ) ? \"#FF0000\" : ((x === 0 && y === 0 ) ? \"#FFFFFF\" : \"#00FF00\" );\n          let gScale = (x === dx && y === dy ) ? 1.0 : ((x === 0 && y === 0 ) ? 1.0 : 0.25 );\n          wallNodes.push({\n            x: xPos,\n            y: yPos,\n            z: zPos,\n            width: gScale,\n            height: 0.5,\n            depth: gScale,\n            color,\n          });\n\n        }\n\n        if (!maze.connects(x, y, \"S\") && x >= 0 &&\n          !((y === -1) && maze.connects(x, 0, \"N\"))\n        ) {\n          // draw south wall\n\n          // console.log(\"DRAWING SOUTHWALL\");\n\n          wallNodes.push({\n            tag: `maze-wall`,\n            map: wallTexture,\n            width: wallWidth,\n            depth: wallDepth,\n            height: wallHeight,\n            x: xPos,\n            y: yPos,\n            z: zPos + cellSize / 2.0,\n          })\n        }\n\n        if (!maze.connects(x, y, \"E\") && y >= 0 &&\n          !((x === -1) && maze.connects(0, y, \"W\"))\n        ) {\n          // draw south wall\n\n          // console.log(\"DRAWING SOUTHWALL\");\n\n          wallNodes.push({\n            tag: `maze-wall`,\n            map: wallTexture,\n            width: wallWidth,\n            depth: wallDepth,\n            height: wallHeight,\n            x: xPos + cellSize / 2.0,\n            y: yPos,\n            z: zPos,\n            rotY: 90,\n          })\n        }\n      }\n    }\n\n    return {\n      wallNodes,\n      endCaps,\n    }\n\n  }\n}"],"names":["MAZEGEN","createMaze","spec","xSize","ySize","wallWidth","wallDepth","wallHeight","wallTexture","capHeight","wallNodes","endCaps","maze","window","MitchAllen","MazeGenerator","Square","x","y","console","log","generate","printBoard","d","getMaxDistance","dx","dy","solve","target","cellSize","xOffset","yOffset","xPos","zPos","push","z","color","radius","height","isGreen","gScale","width","depth","connects","tag","map","rotY"],"mappings":"AACaA,IAAAA,oCAEJC,WAAP,SAAkBC,YAAAA,IAAAA,EAAO,UAUnBA,EAPFC,MAAAA,aAAQ,OAOND,EANFE,MAAAA,aAAQ,MAMNF,EALFG,UAAAA,aAAY,MAKVH,EAJFI,UAAAA,aAAY,MAIVJ,EAHFK,WAAAA,aAAa,IACbC,EAEEN,EAFFM,cAEEN,EADFO,UAAAA,aAAY,IAGVC,EAAY,GACZC,EAAU,GAGVC,EADcC,OAAOC,WAAWC,cACbC,OAAO,CAAEC,EAAGd,EAAOe,EAAGd,IAC7Ce,QAAQC,IAAIR,GACZA,EAAKS,WACLT,EAAKU,aACL,IAAIC,EAAIX,EAAKY,eAAe,EAAG,GACtBC,EAAcF,EAAjBN,EAAUS,EAAOH,EAAVL,EAKbN,EAAKe,MAJQ,CACX,CAAEV,EAAG,EAAGC,EAAG,GACX,CAAED,EAAGQ,EAAIP,EAAGQ,KAGdd,EAAKU,WAAW,CAAEM,OAAQL,IAW1B,IATA,IAAMM,EAAWxB,EAIbyB,GAAW3B,EAAQ,GAAK0B,EAAW,EACnCE,GAAW3B,EAAQ,GAAKyB,EAAW,EAI9BX,GAAK,EAAGA,EAAId,EAAOc,IAC1B,IAAK,IAAID,GAAK,EAAGA,EAAId,EAAOc,IAAK,CAC/B,IAAIe,EAAOF,GAAWb,EAAId,GAAS0B,EAC/BI,EAAOF,GAAWb,EAAId,GAASyB,EAanC,GATAlB,EAAQuB,KAAK,CACXjB,EAAGe,EAAOH,EAAW,EACrBX,EAAGT,EACH0B,EAAGF,EAAOJ,EAAW,EACrBO,MAAO,UACPC,OAAQ,GACRC,OAAQ,MAGN1B,EAAK2B,QAAQtB,EAAEC,GAAI,CAErB,IACIsB,EAAUvB,IAAMQ,GAAMP,IAAMQ,GAAqB,IAANT,GAAiB,IAANC,EAAnB,EAAqC,IAC5ER,EAAUwB,KAAK,CACbjB,EAAGe,EACHd,EA7BG,EA8BHiB,EAAGF,EACHQ,MAAOD,EACPF,OAAQ,GACRI,MAAOF,EACPJ,MATWnB,IAAMQ,GAAMP,IAAMQ,EAAO,UAAoB,IAANT,GAAiB,IAANC,EAAY,UAAY,YAcpFN,EAAK+B,SAAS1B,EAAGC,EAAG,QAAQD,GAAK,KAC1B,IAAPC,GAAaN,EAAK+B,SAAS1B,EAAG,EAAG,MAMpCP,EAAUwB,KAAK,CACbU,gBACAC,IAAKrC,EACLiC,MAAOpC,EACPqC,MAAOpC,EACPgC,OAAQ/B,EACRU,EAAGe,EACHd,EArDG,EAsDHiB,EAAGF,EAAOJ,EAAW,IAIpBjB,EAAK+B,SAAS1B,EAAGC,EAAG,QAAQA,GAAK,KAC1B,IAAPD,GAAaL,EAAK+B,SAAS,EAAGzB,EAAG,MAMpCR,EAAUwB,KAAK,CACbU,gBACAC,IAAKrC,EACLiC,MAAOpC,EACPqC,MAAOpC,EACPgC,OAAQ/B,EACRU,EAAGe,EAAOH,EAAW,EACrBX,EAxEG,EAyEHiB,EAAGF,EACHa,KAAM,KAMd,MAAO,CACLpC,UAAAA,EACAC,QAAAA"}