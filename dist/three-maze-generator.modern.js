class e{static createMaze(e={}){let{xSize:t=10,ySize:a=5,wallWidth:l=4,wallDepth:h=1,wallHeight:o=1,wallTexture:r,capHeight:i=0}=e,n=[],s=[];var c=window.MitchAllen.MazeGenerator.Square({x:t,y:a});console.log(c),c.generate(),c.printBoard();let p=c.getMaxDistance(0,0),{x:d,y:g}=p;c.solve([{x:0,y:0},{x:d,y:g}]),c.printBoard({target:p});const w=l;let x=(t+1)*w/2,z=(a+1)*w/2;for(let e=-1;e<a;e++)for(let p=-1;p<t;p++){let F=x+(p-t)*w,y=z+(e-a)*w;if(s.push({x:F+w/2,y:i,z:y+w/2,color:"#444444",radius:.5,height:1.1}),c.isGreen(p,e)){let t=p===d&&e===g||0===p&&0===e?1:.25;n.push({x:F,y:0,z:y,width:t,height:.5,depth:t,color:p===d&&e===g?"#FF0000":0===p&&0===e?"#FFFFFF":"#00FF00"})}c.connects(p,e,"S")||!(p>=0)||-1===e&&c.connects(p,0,"N")||n.push({tag:"maze-wall",map:r,width:l,depth:h,height:o,x:F,y:0,z:y+w/2}),c.connects(p,e,"E")||!(e>=0)||-1===p&&c.connects(0,e,"W")||n.push({tag:"maze-wall",map:r,width:l,depth:h,height:o,x:F+w/2,y:0,z:y,rotY:90})}return{wallNodes:n,endCaps:s}}}export{e as MAZEGEN};
//# sourceMappingURL=three-maze-generator.modern.js.map
